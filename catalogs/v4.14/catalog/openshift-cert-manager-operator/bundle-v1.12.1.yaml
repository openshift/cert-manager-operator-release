---
image: registry.redhat.io/cert-manager/cert-manager-operator-bundle@sha256:140dafad28aa23ffccfcd87ff0674aa9fcbd904194728a9ee482bfa2d8d976aa
name: cert-manager-operator.v1.12.1
package: openshift-cert-manager-operator
properties:
- type: olm.gvk
  value:
    group: acme.cert-manager.io
    kind: Challenge
    version: v1
- type: olm.gvk
  value:
    group: acme.cert-manager.io
    kind: Order
    version: v1
- type: olm.gvk
  value:
    group: cert-manager.io
    kind: Certificate
    version: v1
- type: olm.gvk
  value:
    group: cert-manager.io
    kind: CertificateRequest
    version: v1
- type: olm.gvk
  value:
    group: cert-manager.io
    kind: ClusterIssuer
    version: v1
- type: olm.gvk
  value:
    group: cert-manager.io
    kind: Issuer
    version: v1
- type: olm.gvk
  value:
    group: operator.openshift.io
    kind: CertManager
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-cert-manager-operator
    version: 1.12.1
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoia3ViZS1yYmFjLXByb3h5IiwiYXBwLmt1YmVybmV0ZXMuaW8vY3JlYXRlZC1ieSI6ImNlcnQtbWFuYWdlci1vcGVyYXRvciIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoibWV0cmljcy1yZWFkZXIiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5Ijoia3VzdG9taXplIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImNsdXN0ZXJyb2xlIiwiYXBwLmt1YmVybmV0ZXMuaW8vcGFydC1vZiI6ImNlcnQtbWFuYWdlci1vcGVyYXRvciJ9LCJuYW1lIjoiY2VydC1tYW5hZ2VyLW9wZXJhdG9yLW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoia3ViZS1yYmFjLXByb3h5IiwiYXBwLmt1YmVybmV0ZXMuaW8vY3JlYXRlZC1ieSI6ImNlcnQtbWFuYWdlci1vcGVyYXRvciIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoiY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJrdXN0b21pemUiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoic2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJjZXJ0LW1hbmFnZXItb3BlcmF0b3IiLCJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn0sIm5hbWUiOiJjZXJ0LW1hbmFnZXItb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc2VydmljZSJ9LCJzcGVjIjp7InBvcnRzIjpbeyJuYW1lIjoiaHR0cHMiLCJwb3J0Ijo4NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOiJodHRwcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
relatedImages:
- image: registry.redhat.io/cert-manager/cert-manager-operator-bundle@sha256:140dafad28aa23ffccfcd87ff0674aa9fcbd904194728a9ee482bfa2d8d976aa
  name: ""
- image: registry.redhat.io/cert-manager/cert-manager-operator-rhel9@sha256:c8b4151d0a12d1ded3b8ba02e591a446ced3c0934715c4b2f80902889d05edf8
  name: cert-manager-operator-rhel9-c8b4151d0a12d1ded3b8ba02e591a446ced3c0934715c4b2f80902889d05edf8-annotation
- image: registry.redhat.io/cert-manager/cert-manager-operator-rhel9@sha256:c8b4151d0a12d1ded3b8ba02e591a446ced3c0934715c4b2f80902889d05edf8
  name: cert-manager-operator
- image: registry.redhat.io/cert-manager/jetstack-cert-manager-acmesolver-rhel9@sha256:33a56228584f61be9af88ba0e442cf4c7f554c599621f6f78f00ecf497fd7329
  name: cert_manager_acmesolver
- image: registry.redhat.io/cert-manager/jetstack-cert-manager-rhel9@sha256:a7070776ce99d92cf71ab341da63ecef701a21bc356ad8648bc2fa4713b864fa
  name: cert_manager_webhook
- image: registry.redhat.io/cert-manager/jetstack-cert-manager-rhel9@sha256:a7070776ce99d92cf71ab341da63ecef701a21bc356ad8648bc2fa4713b864fa
  name: cert_manager_ca_injector
- image: registry.redhat.io/cert-manager/jetstack-cert-manager-rhel9@sha256:a7070776ce99d92cf71ab341da63ecef701a21bc356ad8648bc2fa4713b864fa
  name: cert_manager_controller
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:53d3620bb0490d83aaf6a356bb7d3b9e7147222d1a2017f8317f05fa90cd3de9
  name: kube-rbac-proxy
schema: olm.bundle
