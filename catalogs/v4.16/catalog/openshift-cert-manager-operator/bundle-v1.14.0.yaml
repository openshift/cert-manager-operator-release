---
image: registry.redhat.io/cert-manager/cert-manager-operator-bundle@sha256:92339bb4cfeaa527bd5d68065f58001e05ff3c05af3416e8e1f9dc60734784d3
name: cert-manager-operator.v1.14.0
package: openshift-cert-manager-operator
properties:
- type: olm.gvk
  value:
    group: acme.cert-manager.io
    kind: Challenge
    version: v1
- type: olm.gvk
  value:
    group: acme.cert-manager.io
    kind: Order
    version: v1
- type: olm.gvk
  value:
    group: cert-manager.io
    kind: Certificate
    version: v1
- type: olm.gvk
  value:
    group: cert-manager.io
    kind: CertificateRequest
    version: v1
- type: olm.gvk
  value:
    group: cert-manager.io
    kind: ClusterIssuer
    version: v1
- type: olm.gvk
  value:
    group: cert-manager.io
    kind: Issuer
    version: v1
- type: olm.gvk
  value:
    group: operator.openshift.io
    kind: CertManager
    version: v1alpha1
- type: olm.package
  value:
    packageName: openshift-cert-manager-operator
    version: 1.14.0
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoia3ViZS1yYmFjLXByb3h5IiwiYXBwLmt1YmVybmV0ZXMuaW8vY3JlYXRlZC1ieSI6ImNlcnQtbWFuYWdlci1vcGVyYXRvciIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoibWV0cmljcy1yZWFkZXIiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5Ijoia3VzdG9taXplIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImNsdXN0ZXJyb2xlIiwiYXBwLmt1YmVybmV0ZXMuaW8vcGFydC1vZiI6ImNlcnQtbWFuYWdlci1vcGVyYXRvciJ9LCJuYW1lIjoiY2VydC1tYW5hZ2VyLW9wZXJhdG9yLW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoia3ViZS1yYmFjLXByb3h5IiwiYXBwLmt1YmVybmV0ZXMuaW8vY3JlYXRlZC1ieSI6ImNlcnQtbWFuYWdlci1vcGVyYXRvciIsImFwcC5rdWJlcm5ldGVzLmlvL2luc3RhbmNlIjoiY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJrdXN0b21pemUiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoic2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJjZXJ0LW1hbmFnZXItb3BlcmF0b3IiLCJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn0sIm5hbWUiOiJjZXJ0LW1hbmFnZXItb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3Mtc2VydmljZSJ9LCJzcGVjIjp7InBvcnRzIjpbeyJuYW1lIjoiaHR0cHMiLCJwb3J0Ijo4NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOiJodHRwcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
relatedImages:
- image: registry.redhat.io/cert-manager/cert-manager-operator-bundle@sha256:92339bb4cfeaa527bd5d68065f58001e05ff3c05af3416e8e1f9dc60734784d3
  name: ""
- image: registry.redhat.io/cert-manager/cert-manager-operator-rhel9@sha256:2df1899f8c9f877cb9e1239b860f34c0e7a27d72d87b561fa79a5d7319699d59
  name: cert-manager-operator-rhel9-2df1899f8c9f877cb9e1239b860f34c0e7a27d72d87b561fa79a5d7319699d59-annotation
- image: registry.redhat.io/cert-manager/cert-manager-operator-rhel9@sha256:2df1899f8c9f877cb9e1239b860f34c0e7a27d72d87b561fa79a5d7319699d59
  name: cert-manager-operator
- image: registry.redhat.io/cert-manager/jetstack-cert-manager-acmesolver-rhel9@sha256:33a56228584f61be9af88ba0e442cf4c7f554c599621f6f78f00ecf497fd7329
  name: cert_manager_acmesolver
- image: registry.redhat.io/cert-manager/jetstack-cert-manager-rhel9@sha256:f840f470c8b6c235cfd58ccb6a73a057544a64d29b9074918667ca284c8b68a5
  name: cert_manager_webhook
- image: registry.redhat.io/cert-manager/jetstack-cert-manager-rhel9@sha256:f840f470c8b6c235cfd58ccb6a73a057544a64d29b9074918667ca284c8b68a5
  name: cert_manager_ca_injector
- image: registry.redhat.io/cert-manager/jetstack-cert-manager-rhel9@sha256:f840f470c8b6c235cfd58ccb6a73a057544a64d29b9074918667ca284c8b68a5
  name: cert_manager_controller
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:0c2e9805d2c48d3cea7a9e348f0c37de435302e2e244415541c8a6fd75d77132
  name: kube-rbac-proxy
schema: olm.bundle
